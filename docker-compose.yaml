version: '3.4'

services:
  db:
    image: postgres:14
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=image-extraction-service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 6

  adminer:
    image: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8003:8082

  zookeeper:
    image: bitnami/zookeeper:3.8.0
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.4.0
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  # flask-app:
  #   build: .
  #   command: bash -c "./script/migrate.sh && flask run --host=0.0.0.0 --port=5000"
  #   volumes:
  #     - .:/usr/src/app
  #   environment:
  #     - FLASK_ENV=development
  #     - FLASK_APP=app.py
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - db
  #     - kafka
  #     - zookeeper

volumes:
  db_data:
    driver: local
  localstack:
    driver: local